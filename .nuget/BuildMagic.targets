<?xml version="1.0" encoding="utf-8"?>

<!--

Copyright (c) 2008-2012 IntelliFactory

GNU Affero General Public License Usage

BuildMagic is free software: you can redistribute it and/or modify it
under the terms of the GNU Affero General Public License, version 3,
as published by the Free Software Foundation.

BuildMagic is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License
for more details at <http://www.gnu.org/licenses/>.

If you are unsure which license is appropriate for your use, please contact
IntelliFactory at http://intellifactory.com/contact.

-->

<Project ToolsVersion="4.0" DefaultTargets="Build"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <BuildMagicNuGetVersion Condition="'$(BuildMagicNuGetVersion)' == ''">1.8.40000</BuildMagicNuGetVersion>
    <BuildMagicNuGetUrl Condition="'$(BuildMagicNuGetUrl)' == ''">http://nuget.org/api/v1/package/NuGet.CommandLine/$(BuildMagicNuGetVersion)</BuildMagicNuGetUrl>
    <BuildMagicNuGetFolder Condition="'$(BuildMagicNuGetFolder)' == ''">$(MSBuildThisFileDirectory)/bin</BuildMagicNuGetFolder>
    <BuildMagicNuGetLocation Condition="'$(BuildMagicNuGetLocation)' == ''">$(BuildMagicNuGetFolder)/NuGet.exe</BuildMagicNuGetLocation>
    <BuildMagicLock Condition="'$(BuildMagicLock)' == ''">$(MSBuildThisFileDirectory)/BuildMagic.lock</BuildMagicLock>
    <BuildMagicPackagesConfig Condition="'$(BuildMagicPackagesConfig)' == ''">$(MSBuildProjectDirectory)/packages.config</BuildMagicPackagesConfig>
    <BuildMagicSources Condition="'$(BuildMagicSources)' == ''"></BuildMagicSources>
    <BuildMagicPackages Condition="'$(BuildMagicPackages)' == ''">$(MSBuildThisFileDirectory)/../packages</BuildMagicPackages>
    <BuildDependsOn>BuildMagicRestore;$(BuildDependsOn)</BuildDependsOn>
  </PropertyGroup>

  <UsingTask TaskName="BuildMagicDownloadAndExtract" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)/Microsoft.Build.Tasks.v4.0.dll" >
    <ParameterGroup>
      <Address ParameterType="System.String" Required="true" />
      <ZipFile ParameterType="System.String" Required="true" />
      <PathInZipFile ParameterType="System.String" Required="true" />
      <DestinationFile ParameterType="System.String" Required="true" />
      <LockFile ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Reference Include="WindowsBase" />
      <Using Namespace="System.Threading"/>
      <Code Type="Fragment" Language="cs">
        <![CDATA[
          var locked = false;
          while (File.Exists(LockFile)) {
            locked = true;
            Thread.Sleep(500);
          }
          if (locked) return true;

          try {
            File.WriteAllText(LockFile, "");
            using (var client = new System.Net.WebClient())
            {
              Directory.CreateDirectory(Path.GetDirectoryName(ZipFile));
              client.DownloadFile(Address, ZipFile);
            }
            using (var pkg = System.IO.Packaging.ZipPackage.Open(ZipFile, FileMode.Open))
            {
              var part = pkg.GetParts().First(x => x.Uri.ToString() == PathInZipFile);
              using (var stream = part.GetStream(FileMode.Open))
              {
                Directory.CreateDirectory(Path.GetDirectoryName(DestinationFile));
                using (var output = File.Open(DestinationFile, FileMode.Create))
                {
                  stream.CopyTo(output);
                }
              }
              return true;
            }
          } finally {
            File.Delete(LockFile);
          }
        ]]>
      </Code>
    </Task>
  </UsingTask>

  <Target Name="BuildMagicInstallNuget" Condition="!Exists($(BuildMagicNuGetLocation))">
    <PropertyGroup>
      <BuildMagicNuGetZip>$(BuildMagicNuGetLocation).zip</BuildMagicNuGetZip>
    </PropertyGroup>
    <BuildMagicDownloadAndExtract Address="$(BuildMagicNuGetUrl)" ZipFile="$(BuildMagicNuGetZip)" PathInZipFile="/tools/NuGet.exe" DestinationFile="$(BuildMagicNuGetLocation)" LockFile="$(BuildMagicLock)"/>
  </Target>

  <Target Name="BuildMagicRestore" Condition="Exists('$(BuildMagicPackagesConfig)')" DependsOnTargets="BuildMagicInstallNuget">
    <Exec Command='"$(BuildMagicNuGetLocation)" Install "$(BuildMagicPackagesConfig)" -Source "$(BuildMagicSources)" -O "$(BuildMagicPackages)" ' />
  </Target>

</Project>
